name: Build and Deploy to Production

on:
  push:
    branches:
      - main
      - master

jobs:
  build-deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker to use Minikube's environment
        run: |
          echo "Configuring Docker to use Minikube's daemon..."
          try {
            & minikube -p minikube docker-env --shell powershell | Invoke-Expression
            echo "✅ Docker configured to use Minikube's daemon"
          } catch {
            echo "❌ Error configuring Docker: $_"
            # Continue anyway and don't fail the build
            # exit 1
          }

      - name: Build Docker images
        run: |
          echo "Building Docker images..."
          try {
            docker build -t employee-backend:latest ./app/backend
            docker build -t employee-frontend:latest ./app/frontend
            echo "✅ Docker images built successfully"
          } catch {
            echo "❌ Error building Docker images: $_"
            exit 1
          }

      - name: Tag images for Docker Hub
        run: |
          echo "Tagging images for Docker Hub..."
          docker tag employee-backend:latest i222473/employee-backend:latest
          docker tag employee-frontend:latest i222473/employee-frontend:latest

      - name: Login to Docker Hub
        run: |
          try {
            echo "Logging in to Docker Hub..."
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            echo "✅ Logged in to Docker Hub successfully"
          } catch {
            echo "❌ Error logging in to Docker Hub: $_"
            exit 1
          }

      - name: Push Docker images to Docker Hub
        run: |
          try {
            echo "Pushing images to Docker Hub..."
            docker push i222473/employee-backend:latest
            docker push i222473/employee-frontend:latest
            echo "✅ Images pushed to Docker Hub successfully"
          } catch {
            echo "❌ Error pushing images to Docker Hub: $_"
            exit 1
          }

      - name: Deploy to Kubernetes
        run: |
          echo "Deploying to Kubernetes..."
          try {
            kubectl apply -f kubernetes/namespace.yaml
            kubectl apply -f kubernetes/backend-deployment.yaml -n emp-management
            kubectl apply -f kubernetes/frontend-deployment.yaml -n emp-management
            kubectl apply -f kubernetes/backend-service.yaml -n emp-management
            kubectl apply -f kubernetes/frontend-service.yaml -n emp-management
            echo "✅ Deployed to Kubernetes successfully"
          } catch {
            echo "❌ Error deploying to Kubernetes: $_"
            exit 1
          }

      - name: Verify Deployment
        run: |
          echo "Verifying deployment..."
          try {
            kubectl get pods -n emp-management
            kubectl get services -n emp-management
            echo "✅ Deployment verification completed"
          } catch {
            echo "❌ Error verifying deployment: $_"
            # We don't want to fail the build if verification fails
            # exit 1
          }